events {
    worker_connections 1024;
    multi_accept on;
}

http {

    server {

        listen 8082;
        server_name 10.128.0.33;

        location / {
            default_type text/html;
            return 200 '<html><body style="background-color:blue;"></body></html>';
            add_header Content-Type text/html;
        }

        # listen 443 ssl;
        # if ($scheme = 'http') {
        #     return 301 https://$host$request_uri;
        # }

        # ssl_certificate /etc/letsencrypt/live/melnikov.ddns.net/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/melnikov.ddns.net/privkey.pem;
        # root /sites/starter;
        #     location ^~ \.png$ {
        #         return 301 /image2;
        #         # Caching images
        #         expires 30d; # 1M, max, off, echoe
        #         access_log off;
        #         add_header Pragma public; # Old way to say - allow cache
        #         add_header Cache-Control public; # New way to say - allow cache
        #         add_header Vary Accept-Encoding; # It helps to understand(send cached version or simple version of site to client, cause of gzip or absense of gzip encrypting)
        #     }
        #     # SERVER 3 - (blue-png)
        #     location = /image2 {
        #         try_files $uri /sites/starter/image2/blue.png =404;
        #     }
        #     # Прокси на Apache для информации о PHP
        #     location /info.php {
        #         proxy_pass http://127.0.0.1:8080/info.php; # Прокси на Apache сервер
        #     }
        #     # Redirection + PHP-FPM + GETTING_ANSWER_BY_API
        #     location /secondserver {
        #         return 301 /weather.php;
        #     }
        #     # PHP-FPM/PHP-CGI
        #     location ~ \.php$ {
        #         fastcgi_pass 127.0.0.1:9000;
        #         include fastcgi_params;
        #         include fastcgi.conf;
        #         fastcgi_cache microcache;
        #         fastcgi_cache_valid 200 60m;
        #     }
        #     # Security
        #     add_header X-Frame-Options SAMEORIGIN;
    }

    # include mime.types;
    # # FastCGI Cache
    # fastcgi_cache_path /tmp/nginx_cache levels=1:2 keys_zone=microcache:10m max_size=500m;
    # fastcgi_cache_key $scheme$request_method$host$request_uri;

}
# user www-data www-data;
# worker_processes auto;