user www-data www-data;
worker_processes auto;
events {
    worker_connections 1024;
    multi_accept on;
}

http {
    include mime.types;
    include /etc/nginx/conf.d/load_balancer.conf;

    log_format redblue_log '$remote_addr - $remote_user [$time_local] '
    '"$request" $status $body_bytes_sent '
    '"$http_referer" "$http_user_agent" '
    '"Reverse Proxy Upstream: $upstream_addr" "$upstream_status"';

    upstream color_backend {
        server 10.128.0.21:8081 max_fails=2 fail_timeout=15; # RED
        server 10.128.0.33:8082 max_fails=2 fail_timeout=15; # BLUE
    }

    server {
        include /etc/nginx/conf.d/load_balancer.conf;

        listen 80 default_server;
        listen [::]:443 ssl ipv6only=on;
        listen 443 default_server ssl;

        server_name melnikov.ddns.net;

        # Logs
        error_log /var/log/nginx/debug_log debug;

        # Redirect to https
        if ($scheme = 'http') {
            return 301 https://$host$request_uri;
        }

        ssl_certificate /etc/letsencrypt/live/melnikov.ddns.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/melnikov.ddns.net/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        root /sites/starter;
        index index.php index.html;

        # Балансировка нагрузки для redblue
        location /redblue {
            proxy_pass http://color_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            access_log /var/log/nginx/redblue_access.log redblue_log;
        }

        location / {
            try_files $uri $uri/ =404;
        }

        # Логика для чередования цвета и перенаправления на нужное изображение
        #     if ($color = "red") {
        #         rewrite ^/redblue$ /image1;
        #     }
        #     if ($color = "blue") {
        #         rewrite ^/redblue$ /image2;
        #     }
        # }
        # Прокси для PHP-запросов на 2 других сервера где уже будет прокси на 127.0.0.1:9000, потому что на нынешнем серевре мы обрабатываем только статику

        location ^~ \.php$ {
            fastcgi_pass 127.0.0.1:9000;
            include fastcgi_params;
            include fastcgi.conf;
        }


        # Cтраница, которая обрабатывается этим же nginx
        location /secondpage {
            alias /sites/starter;
            index secondpage.html;
            try_files $uri /secondpage.html;
        }

        # Music
        location /music {
            alias /sites/starter/music/;

            default_type audio/mpeg;
            add_header Content-Disposition 'attachment; filename="$uri"';

            try_files $uri $uri/music.mp3 =404;
        }

        location /secondserver {
            proxy_pass https://www.google.com/;
        }

        # Caching static files
        location ~* \.(js|css|gif|ico)$ {
            expires 30d; # 1M, max, off, echoe
            access_log off;
            add_header Pragma public; # Old way to say - allow cache
            add_header Cache-Control public; # New way to say - allow cache
            add_header Vary Accept-Encoding; # It helps to understand(send cached version or simple version of site to client, cause of gzip or absense of gzip encrypting)
        }

        # GZIP Settings
        gzip on;
        gzip_min_length 200; # min file size to use gzip
        gzip_comp_level 4; # 1-10 .From 2-4 don't require much resources
        gzip_disable "msie6"; # disable gzip for browser - microsoft
        gzip_types text/plain text/css text/javascript text/csv text/xml;
        gzip_types application/pdf application/postscript application/x-javascript;
        gzip_types application/esmascript application/javascript application/json;
        gzip_types image/svg+xml;

        # Security
        add_header X-Frame-Options SAMEORIGIN;
    }
}
