user www-data www-data;

worker_processes auto;

events {
    worker_connections 1024;
    multi_accept on;
}

http {
    include mime.types;
    lua_shared_dict color_state 10m;

    include /usr/local/openresty/nginx/conf/load_balancer.conf;
    include /usr/local/openresty/nginx/scripts/color_logic.lua;

    server {

        listen 80;
        listen 443 ssl;
        server_name melnikov.ddns.net;

        # Redirect to https
        if ($scheme = 'http') {
            return 301 https://$host$request_uri;
        }

        ssl_certificate /etc/letsencrypt/live/melnikov.ddns.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/melnikov.ddns.net/privkey.pem;

        root /sites/starter;
        index index.php index.html;
        #
        #
        #
        #
        #
        #
        #
        #
        #
        #
        # Логи с указанием, куда проксировался запрос
        access_log /var/log/nginx/access.log '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "Upstream: $upstream_addr"';


        ###################################################################################################################3
        # GZIP Settings
        gzip on;
        gzip_min_length 100; # min file size to use gzip
        gzip_comp_level 3; # 1-10 .From 2-4 don't require much resources
        gzip_disable "msie6"; # disable gzip for browser - microsoft
        gzip_types text/plain text/css text/javascript; # ......... default = text/html

        # Security
        add_header X-Frame-Options SAMEORIGIN;

        # Last try to match if rules below fail
        location / {
            try_files $uri $uri/ /index.php?$args;
        }

        # Music
        location /music {
            root /sites/starter;
            default_type audio/mpeg;
            add_header Content-Disposition 'attachment; filename="$uri"';
            try_files $uri $uri/music.mp3 =404;
        }

        # Прокси на Apache для информации о PHP
        location /info.php {
            proxy_pass http://127.0.0.1:8080/info.php; # Прокси на Apache сервер
        }

        # Запрос к другому серверу, который вернёт ответ
        location /secondserver {
            proxy_pass https://api.openweathermap.org/data/2.5/weather?lat=44.34&lon=10.99&appid=83b957412ed2412dd318faac5264a660;
            proxy_set_header Host api.openweathermap.org;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # PHP-FPM/PHP-CGI
        location ~ \.php$ {
            include fastcgi_params;
            include fastcgi.conf;

            fastcgi_cache microcache;
            fastcgi_cache_valid 200 60m;

            fastcgi_pass 127.0.0.1:9000;
        }

        # Caching static files
        location ~* \.(js|css|jpg|png|jpeg|gif|ico)$ {
            expires 30d; # 1M, max, off, echoe
            access_log off;
            add_header Pragma public; # Old way to say - allow cache
            add_header Cache-Control public; # New way to say - allow cache
            add_header Vary Accept-Encoding; # It helps to understand(send cached version or simple version of site to client, cause of gzip or absense of gzip encrypting)
        }
    }
    # FastCGI Cache
    fastcgi_cache_path /tmp/nginx_cache levels=1:2 keys_zone=microcache:10m max_size=500m;
    fastcgi_cache_key $scheme$request_method$host$request_uri;
}

